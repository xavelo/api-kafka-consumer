name: CI/CD Pipeline

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Cache Maven packages
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: Build with Maven
      run: mvn clean package

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Install yq
      run: |
        sudo wget https://github.com/mikefarah/yq/releases/download/v4.13.4/yq_linux_amd64 -O /usr/bin/yq
        sudo chmod +x /usr/bin/yq

    - name: Update Kubernetes Manifests
      run: |
        timestamp=$(date +%s)
        yq eval '.metadata.annotations.timestamp = $(date +%s)' -i argocd/hello-world-k3s-deployment.yaml
        cat argocd/hello-world-k3s-deployment.yaml  # Verify the changes

#    - name: Cache Docker layers
#      uses: actions/cache@v2
#      with:
#        path: /tmp/.buildx-cache
#        key: ${{ runner.os }}-buildx-${{ github.sha }}
#        restore-keys: |
#          ${{ runner.os }}-buildx-

    - name: Log in to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

#    - name: Build and push Docker image
#      run: |
#        docker build -t ${{ secrets.DOCKER_USERNAME }}/my-app:latest
#        docker push ${{ secrets.DOCKER_USERNAME }}/my-app:latest

    - name: Build and push Docker image
      run: |
        docker buildx build --platform linux/arm64 -t ${{ secrets.DOCKER_USERNAME }}/hello-world-k3s:latest . --push

  
