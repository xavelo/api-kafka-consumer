name: CI/CD Pipeline

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: Build with Maven
      run: mvn clean package


    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

#    - name: Cache Docker layers
#      uses: actions/cache@v2
#      with:
#        path: /tmp/.buildx-cache
#        key: ${{ runner.os }}-buildx-${{ github.sha }}
#        restore-keys: |
#          ${{ runner.os }}-buildx-

    - name: Log in to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

#    - name: Build and push Docker image
#      run: |
#        docker build -t ${{ secrets.DOCKER_USERNAME }}/my-app:latest
#        docker push ${{ secrets.DOCKER_USERNAME }}/my-app:latest

    - name: Build and push Docker image
      run: |
        docker buildx build --platform linux/amd64 -t ${{ secrets.DOCKER_USERNAME }}/hello-world-k3s:latest . --push

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install kubectl
      uses: azure/setup-kubectl@v1
      with:
        version: v1.21.0

    - name: Check if kubeconfig file exists
      run: |
        if [ -f "/home/runner/.kube/config" ]; then
          echo "kubeconfig file exists."
        else
          echo "creating kubeconfig file."
          if [ -f "/home/runner/.kube" ]; then
           echo "creating .kube"
           mkdir -p /home/runner/.kube
          else
            echo ".kube exists"
            ls -lt /home/runner/
          fi          
          touch $HOME/.kube/config
        fi

    - name: Set up Kubeconfig
      run: |
        echo "${{ secrets.KUBECONFIG }}" | base64 --decode > $HOME/.kube/config
#        cat $HOME/.kube/config
#        chmod 600 $HOME/.kube/config

    - name: Install Helm
      uses: azure/setup-helm@v1
      with:
        version: v3.5.4

    - name: Deploy to Kubernetes
      run: |
        helm upgrade --install my-app ./helm-chart --set image.repository=${{ secrets.DOCKER_USERNAME }}/my-app --set image.tag=latest